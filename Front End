import React, { useState, useEffect } from "react";
import axios from "axios";

function App() {
  const [users, setUsers] = useState([]);
  const [selectedUser, setSelectedUser] = useState(null);
  const [userData, setUserData] = useState({ name: "", age: "", health_data: "" });

  useEffect(() => {
    fetchUsers();
  }, []);

  const fetchUsers = async () => {
    try {
      const response = await axios.get("http://localhost:5000/user");
      setUsers(response.data);
    } catch (error) {
      console.error("Error fetching users", error);
    }
  };

  const createUser = async () => {
    try {
      await axios.post("http://localhost:5000/user", userData);
      fetchUsers();
    } catch (error) {
      console.error("Error creating user", error);
    }
  };

  const updateUser = async (id) => {
    try {
      await axios.put(`http://localhost:5000/user/${id}`, userData);
      fetchUsers();
    } catch (error) {
      console.error("Error updating user", error);
    }
  };

  const deleteUser = async (id) => {
    try {
      await axios.delete(`http://localhost:5000/user/${id}`);
      fetchUsers();
    } catch (error) {
      console.error("Error deleting user", error);
    }
  };

  return (
    <div className="App">
      <h1>ProHealth Insights</h1>
      <div>
        {users.map((user) => (
          <div key={user.id}>
            <h2>{user.name}</h2>
            <p>Age: {user.age}</p>
            <p>Health Data: {user.health_data}</p>
            <button onClick={() => setSelectedUser(user)}>Edit</button>
            <button onClick={() => deleteUser(user.id)}>Delete</button>
          </div>
        ))}
      </div>
      <div>
        <h2>{selectedUser ? "Edit User" : "Add User"}</h2>
        <label>Name:</label>
        <input
          type="text"
          value={userData.name}
          onChange={(e) => setUserData({ ...userData, name: e.target.value })}
        />
        <label>Age:</label>
        <input
          type="number"
          value={userData.age}
          onChange={(e) => setUserData({ ...userData, age: e.target.value })}
        />
        <label>Health Data:</label>
        <textarea
          value={userData.health_data}
          onChange={(e) => setUserData({ ...userData, health_data: e.target.value })}
        />
        <button onClick={selectedUser ? () => updateUser(selectedUser.id) : createUser}>
          {selectedUser ? "Update User" : "Create User"}
        </button>
      </div>
    </div>
  );
}

export default App;
